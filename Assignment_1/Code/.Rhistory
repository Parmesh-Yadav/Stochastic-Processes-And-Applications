# PART C #
?rbinom
rm(list=ls()) # CLEAN R ENVR
p <- c(0.4,0.9) # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=10,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=1000,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topright",c(p[1:t]),fill=c("red","blue"))
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=300,size=t,p=p[i])
}
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=150,size=t,p=p[i])
}
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=100,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
?legend
legend(legend =,"topright",c(p[1:t]),fill=c("red","blue"))
legend(legend ="topright",c(p[1:t]),fill=c("red","blue"))
legend("topright",c(p[1:t]),fill=c("red","blue"))
legend("topright",legend(),c(p[1:t]),fill=c("red","blue"))
legend("topleft",legend(),c(p[1:t]),fill=c("red","blue"))
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend(),c(p[1:t]),fill=c("red","blue"))
legend("topleft",legend =,c(p[1:t]),fill=c("red","blue"))
legend("topleft",legend = "Prob",c(p[1:t]),fill=c("red","blue"))
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = "Prob",c(p[1:t]),fill=c("red","blue"))
legend("topleft",legend = "Prob",c(p[1:3]),fill=c("red","blue"))
legend("topleft",legend = "Prob",c(p[1:3]),fill=c("red","blue"))
legend("topleft",legend = "Prob",c(p[1:3]),fill=c("red","blue"))
legend("topleft",legend = "Prob",c(p[1:2]),fill=c("red","blue"))
legend("topleft",legend = c("Prob","Prob"),c(p[1:2]),fill=c("red","blue"))
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=400,size=t,p=p[i])
}
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
p<-c(0.4, 0.5, 0.6, 0.7, 0.8)
t<-100 #### suppose finite time is 100
binomial.data<-matrix(nrow=t,ncol=length(p))
#### Generate Binomial sample
for(i in 1:length(p))
{
binomial.data[1:t,i]<-rbinom(n=100,size=50,p=p[i])
}
colormat<-c("black","red","green3","orange","blue")
par(mfrow=c(2,length(p)-2))
for(i in 1:length(p))
{
plot(c(1:t),binomial.data[,i],
xlab="Time",ylab="Number of Transfusions",
col=colormat[i])
abline(h=mean(binomial.data[,i]))
#plot(density(binomial.data[,i]),main=paste("p=",p[i]))
}
par(mfrow=c(1,1))
plot(density(binomial.data[,1]),ylim=c(0,0.2),xlim=c(0,50),
main="Density curve of number of transfusions for various
values of p")
points(density(binomial.data[,2]),col="red")
points(density(binomial.data[,3]),col="green3")
points(density(binomial.data[,4]),col="orange")
points(density(binomial.data[,5]),col="blue")
par(mfrow=c(2,length(p)-2))
for(i in 1:length(p))
{
plot(ecdf(binomial.data[,i]),xlab="Time",ylab="Probability",
col=colormat[i],
main=paste("CDF of number of transfusions for p=",p[i]))
}
# PART C #
?rbinom
rm(list=ls()) # CLEAN R ENVR
p <- c(0.4,0.9) # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
# PART C #
#?rbinom/
rm(list=ls()) # CLEAN R ENVR
p <- c(0.4,0.9) # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
# PART C #
#?rbinom/
rm(list=ls()) # CLEAN R ENVR
# PART C #
#?rbinom/
rm(list=ls()) # CLEAN R ENVR
p <- c(0.4,0.9) # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=200,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
# PART C #
#?rbinom/
rm(list=ls()) # CLEAN R ENVR
p <- c(0.4,0.9) # PROBABILITY OF SUCCESS
t <- 50 # NO. OF TRIALS
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=50,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
binomial_rv_data <- matrix(nrow=t,ncol=length(p)) # BINOMIAL RV
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=100,size=t,p=p[i])
}
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=20,size=t,p=p[i])
}
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=25,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=10,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
for(i in 1:length(p)) # GENERATING BINOMIAL SAMPLE
{
binomial_rv_data[1:t,i]<-rbinom(n=50,size=t,p=p[i])
}
plot(density(binomial_rv_data[,1]),
ylim=c(0,1),
xlim = c(0,t),
main = "Density curve of number of earthquakes with mag >= 6 for different values of p",
xlab = "No of success n",
ylab = "P[no. of success = n]"
)
points(density(binomial_rv_data[,1]),col="red")
points(density(binomial_rv_data[,2]),col="blue")
legend("topleft",legend = c("p = 0.4","p = 0.9"),c(p[1:2]),fill=c("red","blue"))
?rpois
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
poisson_rv_data = rpois(t,10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
poisson_rv_data = rpois(t,10*t)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
poisson_rv_data = rpois(t,10*t)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
t <- 100 # TIME t
poisson_rv_data = rpois(t,lambda = 10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
poisson_rv_data = rpois(t,lambda = 10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
poisson_rv_data = rpois(t,lambda = 10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
poisson_rv_data = rpois(t,10)
poisson_rv_data = rpois(t,10)
poisson_rv_data = rpois(t,10)
poisson_rv_data = rpois(t,10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
plot(poisson_rv_data,
xlab="Time t",
ylab="Number of arrivals at time t",
xlim=c(0,100),
ylim = c(0, 1),
main = "Density of Number of Arrivals until time t"
)
plot(poisson_rv_data,
xlab="Time t",
ylab="Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t]",
main = "Density of Number of Arrivals until time t"
)
t <- 100 # TIME t
poisson_rv_data = dpois(t,10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t]",
main = "Density of Number of Arrivals until time t"
)
poisson_rv_data = ppois(t,10)
poisson_rv_data = ppois(t,10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t]",
main = "Density of Number of Arrivals until time t"
)
poisson_rv_data = qpois(t,10)
poisson_rv_data = qpois(t,10)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t]",
main = "Density of Number of Arrivals until time t"
)
lambda <- 10
poisson_rv_data = rpois(t,lambda)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
lambda <- 20
poisson_rv_data = rpois(t,lambda)
poisson_rv_data = rpois(t,lambda)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
p <- 0.4 # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
geometric_rv_data<-pgeom(0:t,p)# GEOMETRIC RV
plot(geometric_rv_data,
type="l",
xlab="X_1: Geometric RV",
ylab="P[X_1 < x]",
ylim=c(0,1),
main=  "CDF of first interarrival time with p = 0.4"
)
plot(geometric_rv_data,
xlab="X_1: Geometric RV",
ylab="P[X_1 < x]",
ylim=c(0,1),
main=  "CDF of first interarrival time with p = 0.4"
)
type="l",
plot(geometric_rv_data,
type="l",
xlab="X_1: Geometric RV",
ylab="P[X_1 < x]",
ylim=c(0,1),
main=  "CDF of first interarrival time with p = 0.4"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
lambda <- 15
poisson_rv_data = rpois(t,lambda)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
lambda <- 15
poisson_rv_data = rexp(t,lambda)
plot(density(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
plot(poisson_rv_data,
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
# PART B #
?pgeom
rm(list=ls()) # CLEAN R ENVR
t <- 100 # TIME t
lambda <- 15
poisson_rv_data = rexp(t,lambda)
plot(ecdf(poisson_rv_data),
xlab="Time t",
ylab="P[Number of arrivals at time t",
main = "Density of Number of Arrivals until time t"
)
rm(list=ls()) # CLEAN R ENVR
p <- 0.4 # PROBABILITY OF SUCCESS
t <- 200 # NO. OF TRIALS
geometric_rv_data<-pgeom(0:t,p)# GEOMETRIC RV
plot(geometric_rv_data,
type="l",
xlab="X_1: Geometric RV",
ylab="P[X_1 < x]",
ylim=c(0,1),
main=  "CDF of first interarrival time with p = 0.4"
)
